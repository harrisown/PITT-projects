{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
\cocoascreenfonts1{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 OptimalBST Project\
Harrison Bryant\
hsb18@pitt.edu\
21 March 2013\
\
Introduction\
This project builds an optimal binary search tree, given a set of keys with values. The project utilizes memorization in order to improve upon the recursive runtime. \
\
Installation\
\
The following files should be present\
BinaryNode.class\
BinaryTree.class\
BSTOptimizer.class\
BSTOptimizer$PairKeyComparator.class\
Pair.class\
TestBSTOptimizer.class\
\
run with java TestBSTOptimizer.class\
\
Problems:\
none to report. My toString method is a bit unorthodox, but it does in-fact display a correct tree. \
\
}